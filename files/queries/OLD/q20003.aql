set `compiler.joinmemory`
@PARAM
;
USE fixedintersize;
select * from
(select *
 FROM wisconsin_fixed1 ds1, wisconsin_fixed2 ds2, wisconsin_fixed3 ds3, wisconsin_fixed4 ds4
 WHERE
 ds1.unique2 >
 @PARAM
 and ds1.unique2 <
 @PARAM
 and ds2.unique2 >
 @PARAM
 and ds2.unique2 <
 @PARAM
 and ds3.unique2 >
 @PARAM
 and ds3.unique2 <
 @PARAM
 and ds4.unique2 >
 @PARAM
 and ds4.unique2 <
 @PARAM
 and ds1.unique2 /*+ build-size
 @PARAM
    */= ds2.unique2
    and
    ds2.unique2 /*+ build-size
    @PARAM
       */= ds3.unique2
    and
       ds3.unique2 /*+ build-size
       @PARAM
          */= ds4.unique2) q1
      UNION ALL
(select *
 FROM wisconsin_fixed1 ds1, wisconsin_fixed2 ds2, wisconsin_fixed3 ds3, wisconsin_fixed4 ds4
 WHERE
 ds1.unique2 >
 @PARAM
 and ds1.unique2 <
 @PARAM
 and ds2.unique2 >
 @PARAM
 and ds2.unique2 <
 @PARAM
 and ds3.unique2 >
 @PARAM
 and ds3.unique2 <
 @PARAM
 and ds4.unique2 >
 @PARAM
 and ds4.unique2 <
 @PARAM
 and ds1.unique2 /*+ build-size
 @PARAM
    */= ds2.unique2
    and
    ds2.unique2 /*+ build-size
    @PARAM
       */= ds3.unique2
    and
       ds3.unique2 /*+ build-size
       @PARAM
          */= ds4.unique2)
      UNION ALL
      (select *
       FROM wisconsin_fixed1 ds1, wisconsin_fixed2 ds2, wisconsin_fixed3 ds3, wisconsin_fixed4 ds4
       WHERE
       ds1.unique2 >
       @PARAM
       and ds1.unique2 <
       @PARAM
       and ds2.unique2 >
       @PARAM
       and ds2.unique2 <
       @PARAM
       and ds3.unique2 >
       @PARAM
       and ds3.unique2 <
       @PARAM
       and ds4.unique2 >
       @PARAM
       and ds4.unique2 <
       @PARAM
       and ds1.unique2 /*+ build-size
       @PARAM
          */= ds2.unique2
          and
          ds2.unique2 /*+ build-size
          @PARAM
             */= ds3.unique2
          and
             ds3.unique2 /*+ build-size
             @PARAM
                */= ds4.unique2)
            limit 1;